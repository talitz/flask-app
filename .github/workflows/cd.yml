name: Terraform Plan, Apply and Deploy Docker Compose on EC2
on:
  push:
    tags:
      - '*'
env:
 TF_LOG: INFO
 AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
 AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
 TF_VAR_aws_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
 TF_VAR_aws_secret: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
jobs:
  terraform-plan-apply-and-deploy-compose:
    runs-on: ubuntu-latest
    name: Terraform Plan, Apply and Deploy Docker Compose on EC2
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
     - name: Checkout the repository to the runner
       uses: actions/checkout@v2

     - name: Set up SSH
       run: |
         mkdir -p ~/.ssh/aws
         echo "${{ secrets.SSH_PUB_KEY }}" > ~/.ssh/aws/aws_key.pub

     - name: Setup Terraform with specified version on the runner
       uses: hashicorp/setup-terraform@v2
       with:
         terraform_version: 1.9.5

     - name: Terraform Init
       id: init
       run: terraform init
       continue-on-error: false

     - name: Terraform Format
       id: fmt
       run: terraform fmt -check
       continue-on-error: false

     - name: Terraform Validate
       id: validate
       run: terraform validate
       continue-on-error: false

     - name: Terraform Plan
       id: plan
       run: terraform plan -input=false
       continue-on-error: false

     - name: Terraform Apply
       run: terraform apply -auto-approve -input=false
       continue-on-error: false

     - name: Validate Application Healthiness on ALB
       run: | 
        alb_dns=$(terraform output -raw alb_dns)
        echo "$alb_dns"
        curl --fail "$alb_dns/health"
        curl --fail "$alb_dns/json"
        curl --fail "$alb_dns/json/user/1"
       continue-on-error: false